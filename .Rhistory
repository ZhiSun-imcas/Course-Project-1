q()
getwd()
q()
source('~/.active-rstudio-document')
f(2)
install.packages(c("backports", "Matrix", "rlang"))
library(readr)
activity <- read_csv("Data/activity.csv")
View(activity)
x <- data.frame(activity)
names(x)
ncol(x)
nrow(x)
mean(x[, 1])
mean(x[, 1], na.rm = T)
View(x)
class(activity)
class(x)
nrow(activity)
mean(activity[, 1], na.rm = T)
mean(activity[, 1], na.rm = TRUE)
mean(x[, 1], na.rm = T)
mean(activity[, 1], na.rm = T)
activity <- data.frame(activity)
class(activity)
mean(activity[, 1], na.rm = T)
q()
RowData <- read.csv("activity.csv")
head(RowData)
RowData <- read.csv("Data/activity.csv")
head(RowData)
RowData <- read.csv("Data/activity.csv")
head(RowData)
tapply(RowData$steps, RowData$date, sum)
hist(tapply(RowData$steps, RowData$date, sum))
tapply(RowData$steps, RowData$date, sum, na.rm = TRUE)
TotalStepPerDay <- tapply(RowData$steps, RowData$date, sum, na.rm = TRUE)
TotalStepPerDay
mean(TotalStepPerDay)
median(TotalStepPerDay)
RowData
View(RowData)
tapply(RowData$steps, RowData$interval, mean, na.rm = TRUE)
tapply(RowData$steps, RowData$interval, mean, na.rm = FULSE)
tapply(RowData$steps, RowData$interval, mean, na.rm = F)
tapply(RowData$steps, RowData$interval, mean, na.rm = TRUE, simplify = FALSE)
tapply(RowData$steps, RowData$interval, mean, na.rm = TRUE)
AverageDailySteps <- tapply(RowData$steps, RowData$interval, mean, na.rm = TRUE)
class(AverageDailySteps)
plot(names(AverageDailySteps), AverageDailySteps)
q()
knitr::opts_chunk$set(echo = TRUE)
RowData <- read.csv("Data/activity.csv")
head(RowData)
AverageDailySteps <- tapply(RowData$steps, RowData$interval, mean, na.rm = TRUE)
plot(names(AverageDailySteps), AverageDailySteps, type = "l", xlab = "Time Series of 5-minute Interval", ylab = "Average Daily Steps")
max(AverageDailySteps)
sort(AverageDailySteps)
sort(AverageDailySteps, decreasing = TRUE)
names(AverageDailySteps[1])
names(AverageDailySteps[1, 1])
names(AverageDailySteps(1))
names(AverageDailySteps)
names(sort(AverageDailySteps, decreasing = TRUE)[1])
print(names(sort(AverageDailySteps, decreasing = TRUE)[1]))
TotalNAData <- lapply(RowData$steps, is.na)
TotalNAData
TotalNAData <- sapply(RowData$steps, is.na)
TotalNAData
sum(TotalNAData)
names(TotalNAData) <- RowData$date
TotalNAData
AverageDailySteps
names(TotalNAData) <- RowData$interval
TotalNAData
NA+123
NA + 123
123+1
x <- c(1, 2, 3, NA, 5)
replace(x(is.na = T), 5)
replace(x, is.na(x), 4)
AverageDailySteps
names(AverageDailySteps)
AverageDailySteps[RowData$interval[1]]
AverageDailySteps[RowData$interval[2]]
View(RowData)
AverageDailySteps[str(RowData$interval[2])]
AverageDailySteps[str2expression(RowData$interval[2])]
AverageDailySteps[numeric(RowData$interval[2])]
AverageDailySteps[RowData$interval[2]]
RowData$interval[2]
class(RowData$interval[2])
class(names(AverageDailySteps[2]))
class(char(RowData$interval[2])
class(char(RowData$interval[2])
character(RowData$interval[2])
RowData$interval[2]
character(5)
as.character(RowData$interval[2])
AverageDailySteps[as.character(RowData$interval[2])]
Fill <- replace(RowData$steps, TotalNAData, AverageDailySteps)
Fill
Fill <- RowData$steps
for (i in Fill) {
if (is.na(Fill[i])) {
replace(Fill, Fill[i], AverageDailySteps[names(as.character(RowData$interval[i]))])
}
}
for (i in 1:length(Fill)) {
if (is.na(Fill[i])) {
replace(Fill, Fill[i], AverageDailySteps[names(as.character(RowData$interval[i]))])
}
}
length(Fill)
AverageDailySteps
for (i in 1:length(Fill)) {
if (is.na(Fill[i])) {
replace(Fill, i, AverageDailySteps[names(as.character(RowData$interval[i]))])
}
}
for (i <- 1:length(Fill)) {
if (is.na(Fill[i])) {
replace(Fill, i, AverageDailySteps[names(as.character(RowData$interval[i]))])
}
}
replace(Fill, 1, AverageDailySteps[names(as.character(RowData$interval[1]])
replace(Fill, 1, AverageDailySteps[names(as.character(AverageDailySteps[1]))])
replace(Fill, Fill[1], AverageDailySteps[names(as.character(AverageDailySteps[1]))])
class(Fill)
Fill <- list(RowData$steps)
class(Fill)
replace(Fill, 1, AverageDailySteps[names(as.character(AverageDailySteps[1]))])
replace(Fill, Fill[1], AverageDailySteps[names(as.character(AverageDailySteps[1]))])
replace(Fill, Fill[[1]], AverageDailySteps[names(as.character(AverageDailySteps[1]))])
Fill
replace(Fill, Fill[[1]][1], AverageDailySteps[names(as.character(AverageDailySteps[1]))])
replace(Fill[[1]], 1, AverageDailySteps[names(as.character(AverageDailySteps[1]))])
AverageDailySteps[names(as.character(AverageDailySteps[1]))]
as.character(AverageDailySteps[1])
as.character(RowData$interval[1])
replace(Fill[[1]], 1, AverageDailySteps[names(as.character(RowData$interval[1]))])
replace(Fill, 1, AverageDailySteps[names(as.character(RowData$interval[1]))])
AverageDailySteps[names(as.character(RowData$interval[1]))]
AverageDailySteps[as.character(RowData$interval[1])]
AverageDailySteps[as.character(RowData$interval[2])]
replace(Fill, 1, AverageDailySteps[as.character(RowData$interval[2])])
replace(Fill, 1, AverageDailySteps[as.character(RowData$interval[1])])
replace(Fill, 2, AverageDailySteps[as.character(RowData$interval[1])])
replace(Fill[[1]], 2, AverageDailySteps[as.character(RowData$interval[1])])
View(Fill)
as.array(Fill)
Fill <- as.array(RowData$steps)
Fill
length(Fill)
for (i <- 1:length(Fill)) {
if (is.na(Fill[i])) {
replace(Fill, i, AverageDailySteps[names(as.character(RowData$interval[i]))])
}
}
replace(Fill, 1, AverageDailySteps[as.character(RowData$interval[1])])
for (i <- 1:length(Fill)) {
if (is.na(Fill[i])) {
replace(Fill, i, AverageDailySteps[as.character(RowData$interval[i])])
}
}
for (i in 1:length(Fill)) {
if (is.na(Fill[i])) {
replace(Fill, i, AverageDailySteps[as.character(RowData$interval[i])])
}
}
Fill
Fill[2]
replace(Fill, 2, AverageDailySteps[as.character(RowData$interval[2])])
for (i in 1:length(Fill)) {
if (is.na(Fill[i])) {
Fill <- replace(Fill, i, AverageDailySteps[as.character(RowData$interval[i])])
}
}
Fill
FilledData <- as.array(RowData$steps)
for (i in 1:length(FilledData)) {
if (is.na(FilledData[i])) {
Fill <- replace(FilledData, i, AverageDailySteps[as.character(RowData$interval[i])])
}
}
FilledData <- as.array(RowData$steps)
for (i in 1:length(FilledData)) {
if (is.na(FilledData[i])) {
FilledData <- replace(FilledData, i, AverageDailySteps[as.character(RowData$interval[i])])
}
}
FilledData <- as.array(RowData$steps)
for (i in 1:length(FilledData)) {
if (is.na(FilledData[i])) {
FilledData <- replace(FilledData, i, AverageDailySteps[as.character(RowData$interval[i])])
}
}
head(FilledData)
FilledData <- as.array(RowData$steps)
for (i in 1:length(FilledData)) {
if (is.na(FilledData[i])) {
FilledData <- replace(FilledData, i, AverageDailySteps[as.character(RowData$interval[i])])
}
}
names(FilledData) <- RowData$interval
head(FilledData)
AverageDailySteps
Make a histogram of the total number of steps taken each day and Calculate and report the mean and median total number of steps taken per day.
as.list(FilledData)
TotalStepPerDay_Filled <- tapply(as.list(FilledData), RowData$date, sum)
Fill <- as.list(FilledData)
View(Fill)
Fill
TotalStepPerDay_Filled <- tapply(FilledData, RowData$date, sum)
TotalStepPerDay_Filled
TotalStepPerDay_Filled <- tapply(FilledData, RowData$date, sum)
hist(TotalStepPerDay_Filled, main = "the total number of steps taken each day", xlab = "the total filled steps")
TotalStepPerDay_Filled <- tapply(FilledData, RowData$date, sum)
hist(TotalStepPerDay_Filled, main = "the total number of filled steps taken each day", xlab = "the total filled steps")
median(TotalStepPerDay_Filled)
mean(TotalStepPerDay_Filled)
Mean <- mean(TotalStepPerDay);
TotalStepPerDay <- tapply(RowData$steps, RowData$date, sum, na.rm = TRUE)
head(TotalStepPerDay)
Mean <- mean(TotalStepPerDay);
print(Mean)
Median <- median(TotalStepPerDay)
print(Median)
TotalStepPerDay_Filled <- tapply(FilledData, RowData$date, sum)
hist(TotalStepPerDay_Filled, main = "the total number of filled steps taken each day", xlab = "the total filled steps")
Mean_Filled <- mean(TotalStepPerDay_Filled);
print(Mean_Filled)
Median_Filled <- median(TotalStepPerDay_Filled)
print(Median_Filled)
hist(TotalStepPerDay, main = "the total number of steps taken each day", xlab = "the total steps")
weekdays(RowData$date)
weekdays(as.Date(RowData$date))
View(weekdays(as.Date(RowData$date)))
factor(RowData$date, c("weekdays", "weekends"))
RowData$date
class(RowData$date)
RowData$weekdays <- weekdays(as.Date(RowData$date))
head(RowData)
class(RowData$weekdays)
weekday <- factor(c("星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"), levels(c("星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日")), labels(c("weekdays", "weekdays", "weekdays", "weekdays", "weekdays", "weekends", "weekends")))
weekday <- factor(c("星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"), levels = c("星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"), labels = c("weekdays", "weekdays", "weekdays", "weekdays", "weekdays", "weekends", "weekends"))
weekday
weekday <- factor(c("星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"), levels = c("weekdays", "weekdays", "weekdays", "weekdays", "weekdays", "weekends", "weekends"))
weekday <- factor(c("星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"), levels = c("weekdays", "weekdays", "weekdays", "weekdays", "weekdays", "weekends", "weekends"))
weekday <- factor(c("星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"), levels(c("weekdays", "weekdays", "weekdays", "weekdays", "weekdays", "weekends", "weekends"))
)
weekday
weekday <- factor(c("星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"), levels = c("星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"), labels = c("weekdays", "weekdays", "weekdays", "weekdays", "weekdays", "weekends", "weekends"))
weekday
RowData$weeks <- factor(RowData$weekdays, levels = c("星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"), labels(c("weekdays", "weekdays", "weekdays", "weekdays", "weekdays", "weekends", "weekends")))
RowData
RowData$weeks
RowData$weeks <- factor(RowData$weekdays, levels = c("星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"), labels = c("weekdays", "weekdays", "weekdays", "weekdays", "weekdays", "weekends", "weekends"))
RowData$weeks
View(RowData)
RowData$weekdays <- factor(weekdays(as.Date(RowData$date)), levels = c("星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"), labels = c("weekdays", "weekdays", "weekdays", "weekdays", "weekdays", "weekends", "weekends"))
head(RowData)
View(RowData)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
RowData <- read.csv("Data/activity.csv")
head(RowData)
TotalStepPerDay <- tapply(RowData$steps, RowData$date, sum, na.rm = TRUE)
head(TotalStepPerDay)
hist(TotalStepPerDay, main = "the total number of steps taken each day", xlab = "the total steps")
Mean <- mean(TotalStepPerDay);
print(Mean)
Median <- median(TotalStepPerDay)
print(Median)
AverageDailySteps <- tapply(RowData$steps, RowData$interval, mean, na.rm = TRUE)
plot(names(AverageDailySteps), AverageDailySteps, type = "l", xlab = "Time Series of 5-minute Interval", ylab = "Average Daily Steps")
print(names(sort(AverageDailySteps, decreasing = TRUE)[1]))
TotalNAData <- sapply(RowData$steps, is.na)
print(sum(TotalNAData))
FilledData <- as.array(RowData$steps)
for (i in 1:length(FilledData)) {
if (is.na(FilledData[i])) {
FilledData <- replace(FilledData, i, AverageDailySteps[as.character(RowData$interval[i])])
}
}
names(FilledData) <- RowData$interval
head(FilledData)
TotalStepPerDay_Filled <- tapply(FilledData, RowData$date, sum)
hist(TotalStepPerDay_Filled, main = "the total number of filled steps taken each day", xlab = "the total filled steps")
Mean_Filled <- mean(TotalStepPerDay_Filled);
print(Mean_Filled)
Median_Filled <- median(TotalStepPerDay_Filled)
print(Median_Filled)
RowData$weekdays <- factor(weekdays(as.Date(RowData$date)), levels = c("星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"), labels = c("weekdays", "weekdays", "weekdays", "weekdays", "weekdays", "weekends", "weekends"))
head(RowData)
View(RowData)
RowData$weekdays
levels(RowData$weekdays)
RowData$weekdays <- factor(weekdays(as.Date(RowData$date)), levels = c("星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"), labels = c("weekdays", "weekdays", "weekdays", "weekdays", "weekdays", "weekends", "weekends"))
head(RowData)
levels(RowData$weekdays)
RowData$weekdays <- factor(weekdays(as.Date(RowData$date)), levels = c("星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"), labels = c("weekdays", "weekdays", "weekdays", "weekdays", "weekdays", "weekends", "weekends"))
levels(RowData$weekdays)
par(mfrow = c(2, 1))
AverageDailySteps_Weekdays <- AverageDailySteps[RowData$weekdays = "weekdays"]
AverageDailySteps_Weekdays <- AverageDailySteps[RowData$weekdays("weekdays")]
AverageDailySteps_Weekdays <- AverageDailySteps[RowData$weekdays == "weekdays"]
AverageDailySteps
WeekdayData <- RowData[RowData$weekdays == "weekdays"]
WeekdayData <- RowData[RowData$weekdays == "weekdays"]
WeekdayData <- RowData[RowData$weekdays = "weekdays"]
RowData$steps[RowData$weekdays == "weekdays"]
WeekdaySteps <- RowData$steps[RowData$weekdays == "weekdays"]
WeekendSteps <- RowData$steps[RowData$weekdays == "weekends"]
WeekdaySteps
WeekdaySteps <- as.list(RowData[RowData$weekdays == "weekdays"])
WeekdaySteps <- as.data.frame(RowData[RowData$weekdays == "weekdays"])
WeekdaySteps <- RowData(RowData$weekdays == "weekdays")
WeekdaySteps <- RowData[RowData$weekdays == "weekdays", ]
WeekdaySteps
WeekendSteps <- RowData[RowData$weekdays == "weekends", ]
WeekendSteps
WeekdaySteps <- RowData[RowData$weekdays == "weekdays", ]
WeekendSteps <- RowData[RowData$weekdays == "weekends", ]
AverageWeekdaySteps <- tapply(WeekdaySteps$steps, WeekdaySteps$interval, na.rm = TRUE)
AverageWeekendSteps <- tapply(WeekendSteps$steps, WeekendSteps$interval, na.rm = TRUE)
AverageWeekdaySteps
WeekdaySteps <- RowData[RowData$weekdays == "weekdays", ]
WeekendSteps <- RowData[RowData$weekdays == "weekends", ]
AverageWeekdaySteps <- tapply(WeekdaySteps$steps, WeekdaySteps$interval, mean, na.rm = TRUE)
AverageWeekendSteps <- tapply(WeekendSteps$steps, WeekendSteps$interval, mean, na.rm = TRUE)
AverageWeekdaySteps
AverageWeekendSteps
WeekdaySteps <- RowData[RowData$weekdays == "weekdays", ]
WeekendSteps <- RowData[RowData$weekdays == "weekends", ]
AverageWeekdaySteps <- tapply(WeekdaySteps$steps, WeekdaySteps$interval, mean, na.rm = TRUE)
AverageWeekendSteps <- tapply(WeekendSteps$steps, WeekendSteps$interval, mean, na.rm = TRUE)
par(mfrow = c(2, 1))
plot(names(AverageWeekdaySteps), AverageWeekdaySteps, type = "l")
plot(names(AverageWeekendSteps), AverageWeekendSteps, type = "l")
q()
